{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n    return t;\n  };\n  return __assign.apply(this, arguments);\n};\nvar __read = this && this.__read || function (o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n    r,\n    ar = [],\n    e;\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n  return ar;\n};\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports, StorageAction } from '@aws-amplify/core';\nimport { AWSS3Provider } from '../providers';\nimport { isCancelError } from '../AwsClients/S3/utils';\nimport { AWSS3UploadTask } from '../providers/AWSS3UploadTask';\nimport { getStorageUserAgentValue } from '../common/StorageUtils';\nvar logger = new Logger('StorageClass');\nvar loggerStorageInstance = new Logger('Storage'); // Logging relating to Storage instance management\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar InternalStorageClass = /** @class */function () {\n  /**\n   * Initialize Storage\n   * @param {Object} config - Configuration object for storage\n   */\n  function InternalStorageClass() {\n    this._config = {};\n    this._pluggables = [];\n    this._abortControllerMap = new WeakMap();\n    logger.debug('Storage Options', this._config);\n    this.get = this.get.bind(this);\n    this.put = this.put.bind(this);\n    this.remove = this.remove.bind(this);\n    this.list = this.list.bind(this);\n  }\n  InternalStorageClass.prototype.getModuleName = function () {\n    return 'InternalStorage';\n  };\n  /**\n   * add plugin into Storage category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  InternalStorageClass.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Storage') {\n      this._pluggables.push(pluggable);\n      var config = {};\n      config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n  InternalStorageClass.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      return null;\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n  InternalStorageClass.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Storage\n   * @param {Object} config - Configuration object for storage\n   * @return {Object} - Current configuration\n   */\n  InternalStorageClass.prototype.configure = function (config) {\n    var _this = this;\n    var _a;\n    logger.debug('configure Storage');\n    if (!config) return this._config;\n    var amplifyConfig = parseAWSExports(config);\n    var storageConfig = (_a = amplifyConfig.Storage) !== null && _a !== void 0 ? _a : {};\n    var defaultProviderConfigKeys = ['bucket', 'region', 'level', 'track', 'customPrefix', 'ContentMD5', 'serverSideEncryption', 'SSECustomerAlgorithm', 'SSECustomerKey',\n    // TODO(AllanZhengYP): remove in V6.\n    'SSECustomerKeyMD5', 'SSEKMSKeyId'];\n    var hasDefaultProviderConfigKeys = function (config) {\n      return Object.keys(config).find(function (key) {\n        return defaultProviderConfigKeys.includes(key);\n      });\n    };\n    if (hasDefaultProviderConfigKeys(storageConfig) && !storageConfig[DEFAULT_PROVIDER]) {\n      storageConfig[DEFAULT_PROVIDER] = {};\n    }\n    Object.entries(storageConfig).forEach(function (_a) {\n      var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n      if (key && defaultProviderConfigKeys.includes(key) && value !== undefined) {\n        storageConfig[DEFAULT_PROVIDER][key] = value;\n        delete storageConfig[key];\n      }\n    });\n    // only update new values for each provider\n    Object.keys(storageConfig).forEach(function (providerName) {\n      if (typeof storageConfig[providerName] !== 'string') {\n        _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), storageConfig[providerName]);\n      }\n    });\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSS3Provider());\n    }\n    return this._config;\n  };\n  InternalStorageClass.prototype.getAbortController = function () {\n    return new AbortController();\n  };\n  InternalStorageClass.prototype.updateRequestToBeCancellable = function (request, abortController) {\n    this._abortControllerMap.set(request, abortController);\n  };\n  InternalStorageClass.prototype.isUploadTask = function (x) {\n    return typeof x !== 'undefined' && typeof x['pause'] === 'function' && typeof x['resume'] === 'function';\n  };\n  /**\n   * Cancels an inflight request\n   *\n   * @param request - The request to cancel\n   * @param [message] - A message to include in the cancelation exception\n   */\n  InternalStorageClass.prototype.cancel = function (request, message, customUserAgentDetails) {\n    if (request instanceof AWSS3UploadTask) {\n      return request._cancel(getStorageUserAgentValue(StorageAction.Cancel, customUserAgentDetails));\n    }\n    var abortController = this._abortControllerMap.get(request);\n    if (abortController) {\n      // TODO: [v6] clean up the aborted promise in the weak map.\n      // Not doing it yet to avoid breaking changes when users may abort a request twice.\n      abortController.abort(message);\n    } else {\n      logger.debug('The request does not map to any cancel token');\n    }\n  };\n  InternalStorageClass.prototype.copy = function (src, dest, config, customUserAgentDetails) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var abortController = this.getAbortController();\n    if (typeof plugin.copy !== 'function') {\n      return Promise.reject(\".copy is not implemented on provider \".concat(plugin.getProviderName()));\n    }\n    var responsePromise = plugin.copy(src, dest, __assign(__assign({}, config), {\n      abortSignal: abortController.signal\n    }), getStorageUserAgentValue(StorageAction.Copy, customUserAgentDetails));\n    this.updateRequestToBeCancellable(responsePromise, abortController);\n    return responsePromise;\n  };\n  InternalStorageClass.prototype.get = function (key, config, customUserAgentDetails) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var abortController = this.getAbortController();\n    var responsePromise = plugin.get(key, __assign(__assign({}, config), {\n      abortSignal: abortController.signal\n    }), getStorageUserAgentValue(StorageAction.Get, customUserAgentDetails));\n    this.updateRequestToBeCancellable(responsePromise, abortController);\n    return responsePromise;\n  };\n  InternalStorageClass.prototype.isCancelError = function (error) {\n    return isCancelError(error);\n  };\n  InternalStorageClass.prototype.getProperties = function (key, config, customUserAgentDetails) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      throw new Error('No plugin found with providerName');\n    }\n    var abortController = this.getAbortController();\n    if (typeof plugin.getProperties !== 'function') {\n      return Promise.reject(\".getProperties is not implemented on provider \".concat(plugin.getProviderName()));\n    }\n    var responsePromise = plugin === null || plugin === void 0 ? void 0 : plugin.getProperties(key, config, getStorageUserAgentValue(StorageAction.GetProperties, customUserAgentDetails));\n    this.updateRequestToBeCancellable(responsePromise, abortController);\n    return responsePromise;\n  };\n  InternalStorageClass.prototype.put = function (key, object, config, customUserAgentDetails) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var abortController = this.getAbortController();\n    var response = plugin.put(key, object, __assign(__assign({}, config), {\n      abortSignal: abortController.signal\n    }), getStorageUserAgentValue(StorageAction.Put, customUserAgentDetails));\n    if (!this.isUploadTask(response)) {\n      this.updateRequestToBeCancellable(response, abortController);\n    }\n    return response;\n  };\n  InternalStorageClass.prototype.remove = function (key, config, customUserAgentDetails) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    return plugin.remove(key, config, getStorageUserAgentValue(StorageAction.Remove, customUserAgentDetails));\n  };\n  InternalStorageClass.prototype.list = function (path, config, customUserAgentDetails) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var plugin = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (plugin === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    return plugin.list(path, config, getStorageUserAgentValue(StorageAction.List, customUserAgentDetails));\n  };\n  return InternalStorageClass;\n}();\nexport { InternalStorageClass };\nexport var InternalStorage = new InternalStorageClass();\nAmplify.register(InternalStorage);","map":{"version":3,"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__read","o","m","Symbol","iterator","r","ar","e","next","done","push","value","error","Amplify","ConsoleLogger","Logger","parseAWSExports","StorageAction","AWSS3Provider","isCancelError","AWSS3UploadTask","getStorageUserAgentValue","logger","loggerStorageInstance","DEFAULT_PROVIDER","InternalStorageClass","_config","_pluggables","_abortControllerMap","WeakMap","debug","get","bind","put","remove","list","getModuleName","addPluggable","pluggable","getCategory","config","configure","getProviderName","getPluggable","providerName","find","undefined","removePluggable","filter","_this","_a","amplifyConfig","storageConfig","Storage","defaultProviderConfigKeys","hasDefaultProviderConfigKeys","keys","key","includes","entries","forEach","_b","getAbortController","AbortController","updateRequestToBeCancellable","request","abortController","set","isUploadTask","x","cancel","message","customUserAgentDetails","_cancel","Cancel","abort","copy","src","dest","provider","plugin","Promise","reject","concat","responsePromise","abortSignal","signal","Copy","Get","getProperties","Error","GetProperties","object","response","Put","Remove","path","List","InternalStorage","register"],"sources":["C:/Users/geun/amplify-app/node_modules/@aws-amplify/storage/lib-esm/internals/InternalStorage.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __read = (this && this.__read) || function (o, n) {\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n    if (!m) return o;\n    var i = m.call(o), r, ar = [], e;\n    try {\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n    }\n    catch (error) { e = { error: error }; }\n    finally {\n        try {\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\n        }\n        finally { if (e) throw e.error; }\n    }\n    return ar;\n};\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports, StorageAction, } from '@aws-amplify/core';\nimport { AWSS3Provider } from '../providers';\nimport { isCancelError } from '../AwsClients/S3/utils';\nimport { AWSS3UploadTask } from '../providers/AWSS3UploadTask';\nimport { getStorageUserAgentValue } from '../common/StorageUtils';\nvar logger = new Logger('StorageClass');\nvar loggerStorageInstance = new Logger('Storage'); // Logging relating to Storage instance management\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar InternalStorageClass = /** @class */ (function () {\n    /**\n     * Initialize Storage\n     * @param {Object} config - Configuration object for storage\n     */\n    function InternalStorageClass() {\n        this._config = {};\n        this._pluggables = [];\n        this._abortControllerMap = new WeakMap();\n        logger.debug('Storage Options', this._config);\n        this.get = this.get.bind(this);\n        this.put = this.put.bind(this);\n        this.remove = this.remove.bind(this);\n        this.list = this.list.bind(this);\n    }\n    InternalStorageClass.prototype.getModuleName = function () {\n        return 'InternalStorage';\n    };\n    /**\n     * add plugin into Storage category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    InternalStorageClass.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Storage') {\n            this._pluggables.push(pluggable);\n            var config = {};\n            config = pluggable.configure(this._config[pluggable.getProviderName()]);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    InternalStorageClass.prototype.getPluggable = function (providerName) {\n        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n        if (pluggable === undefined) {\n            logger.debug('No plugin found with providerName', providerName);\n            return null;\n        }\n        else\n            return pluggable;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    InternalStorageClass.prototype.removePluggable = function (providerName) {\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\n        return;\n    };\n    /**\n     * Configure Storage\n     * @param {Object} config - Configuration object for storage\n     * @return {Object} - Current configuration\n     */\n    InternalStorageClass.prototype.configure = function (config) {\n        var _this = this;\n        var _a;\n        logger.debug('configure Storage');\n        if (!config)\n            return this._config;\n        var amplifyConfig = parseAWSExports(config);\n        var storageConfig = (_a = amplifyConfig.Storage) !== null && _a !== void 0 ? _a : {};\n        var defaultProviderConfigKeys = [\n            'bucket',\n            'region',\n            'level',\n            'track',\n            'customPrefix',\n            'ContentMD5',\n            'serverSideEncryption',\n            'SSECustomerAlgorithm',\n            'SSECustomerKey',\n            // TODO(AllanZhengYP): remove in V6.\n            'SSECustomerKeyMD5',\n            'SSEKMSKeyId',\n        ];\n        var hasDefaultProviderConfigKeys = function (config) {\n            return Object.keys(config).find(function (key) { return defaultProviderConfigKeys.includes(key); });\n        };\n        if (hasDefaultProviderConfigKeys(storageConfig) &&\n            !storageConfig[DEFAULT_PROVIDER]) {\n            storageConfig[DEFAULT_PROVIDER] = {};\n        }\n        Object.entries(storageConfig).forEach(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            if (key &&\n                defaultProviderConfigKeys.includes(key) &&\n                value !== undefined) {\n                storageConfig[DEFAULT_PROVIDER][key] = value;\n                delete storageConfig[key];\n            }\n        });\n        // only update new values for each provider\n        Object.keys(storageConfig).forEach(function (providerName) {\n            if (typeof storageConfig[providerName] !== 'string') {\n                _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), storageConfig[providerName]);\n            }\n        });\n        this._pluggables.forEach(function (pluggable) {\n            pluggable.configure(_this._config[pluggable.getProviderName()]);\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AWSS3Provider());\n        }\n        return this._config;\n    };\n    InternalStorageClass.prototype.getAbortController = function () {\n        return new AbortController();\n    };\n    InternalStorageClass.prototype.updateRequestToBeCancellable = function (request, abortController) {\n        this._abortControllerMap.set(request, abortController);\n    };\n    InternalStorageClass.prototype.isUploadTask = function (x) {\n        return (typeof x !== 'undefined' &&\n            typeof x['pause'] === 'function' &&\n            typeof x['resume'] === 'function');\n    };\n    /**\n     * Cancels an inflight request\n     *\n     * @param request - The request to cancel\n     * @param [message] - A message to include in the cancelation exception\n     */\n    InternalStorageClass.prototype.cancel = function (request, message, customUserAgentDetails) {\n        if (request instanceof AWSS3UploadTask) {\n            return request._cancel(getStorageUserAgentValue(StorageAction.Cancel, customUserAgentDetails));\n        }\n        var abortController = this._abortControllerMap.get(request);\n        if (abortController) {\n            // TODO: [v6] clean up the aborted promise in the weak map.\n            // Not doing it yet to avoid breaking changes when users may abort a request twice.\n            abortController.abort(message);\n        }\n        else {\n            logger.debug('The request does not map to any cancel token');\n        }\n    };\n    InternalStorageClass.prototype.copy = function (src, dest, config, customUserAgentDetails) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var abortController = this.getAbortController();\n        if (typeof plugin.copy !== 'function') {\n            return Promise.reject(\".copy is not implemented on provider \".concat(plugin.getProviderName()));\n        }\n        var responsePromise = plugin.copy(src, dest, __assign(__assign({}, config), { abortSignal: abortController.signal }), getStorageUserAgentValue(StorageAction.Copy, customUserAgentDetails));\n        this.updateRequestToBeCancellable(responsePromise, abortController);\n        return responsePromise;\n    };\n    InternalStorageClass.prototype.get = function (key, config, customUserAgentDetails) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var abortController = this.getAbortController();\n        var responsePromise = plugin.get(key, __assign(__assign({}, config), { abortSignal: abortController.signal }), getStorageUserAgentValue(StorageAction.Get, customUserAgentDetails));\n        this.updateRequestToBeCancellable(responsePromise, abortController);\n        return responsePromise;\n    };\n    InternalStorageClass.prototype.isCancelError = function (error) {\n        return isCancelError(error);\n    };\n    InternalStorageClass.prototype.getProperties = function (key, config, customUserAgentDetails) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            throw new Error('No plugin found with providerName');\n        }\n        var abortController = this.getAbortController();\n        if (typeof plugin.getProperties !== 'function') {\n            return Promise.reject(\".getProperties is not implemented on provider \".concat(plugin.getProviderName()));\n        }\n        var responsePromise = plugin === null || plugin === void 0 ? void 0 : plugin.getProperties(key, config, getStorageUserAgentValue(StorageAction.GetProperties, customUserAgentDetails));\n        this.updateRequestToBeCancellable(responsePromise, abortController);\n        return responsePromise;\n    };\n    InternalStorageClass.prototype.put = function (key, object, config, customUserAgentDetails) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var abortController = this.getAbortController();\n        var response = plugin.put(key, object, __assign(__assign({}, config), { abortSignal: abortController.signal }), getStorageUserAgentValue(StorageAction.Put, customUserAgentDetails));\n        if (!this.isUploadTask(response)) {\n            this.updateRequestToBeCancellable(response, abortController);\n        }\n        return response;\n    };\n    InternalStorageClass.prototype.remove = function (key, config, customUserAgentDetails) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        return plugin.remove(key, config, getStorageUserAgentValue(StorageAction.Remove, customUserAgentDetails));\n    };\n    InternalStorageClass.prototype.list = function (path, config, customUserAgentDetails) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var plugin = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (plugin === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        return plugin.list(path, config, getStorageUserAgentValue(StorageAction.List, customUserAgentDetails));\n    };\n    return InternalStorageClass;\n}());\nexport { InternalStorageClass };\nexport var InternalStorage = new InternalStorageClass();\nAmplify.register(InternalStorage);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
import { StorageCopySource, StorageCopyDestination } from './Storage';
export interface StorageProvider {
    cancel?(request: Promise<any>): void;
    copy?(src: StorageCopySource, dest: StorageCopyDestination, config?: any, userAgentValue?: string): Promise<any>;
    configure(config: object): object;
    get(key: string, options?: any, userAgentValue?: string): Promise<string | Object>;
    getProperties?(key: string, options?: any, userAgentValue?: string): Promise<Object>;
    put(key: string, object: any, options?: any, userAgentValue?: string): Promise<Object> | UploadTask;
    remove(key: string, options?: any, userAgentValue?: string): Promise<any>;
    list(path: any, options?: any, userAgentValue?: string): Promise<any>;
    getCategory(): string;
    getProviderName(): string;
}
export interface UploadTask {
    resume(): any;
    pause(): any;
    percent: number;
    isInProgress: boolean;
}
export interface StorageProviderWithCopy extends StorageProvider {
    copy(src: StorageCopySource, dest: StorageCopyDestination, config?: any, userAgentValue?: string): Promise<any>;
}
export interface StorageProviderWithGetProperties extends StorageProvider {
    getProperties(key: string, options?: any, userAgentValue?: string): Promise<Object>;
}
export type StorageProviderApi = 'copy' | 'get' | 'put' | 'remove' | 'list' | 'getProperties';
export type StorageProviderApiOptionsIndexMap = {
    copy: 2;
    get: 1;
    put: 2;
    remove: 1;
    list: 1;
    getProperties: 1;
};
